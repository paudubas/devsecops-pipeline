name: Security Scans

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  gates:
    runs-on: ubuntu-latest
    needs: [sca, iac, secrets, sast, dast]
    steps:
      - name: Check SCA Report
        run: |
          if grep -q "HIGH" dependency-check-report.txt; then
            echo "High severity dependencies found! Failing the pipeline."
            exit 1
          fi
      - name: Check IaC Security Report
        run: |
          if grep -q "FAILED" iac-security-report.txt; then
            echo "Infrastructure as Code security issues detected! Failing the pipeline."
            exit 1
          fi
      - name: Check Secrets Report
        run: |
          if [ -s gitleaks-report.json ]; then
            echo "Secrets detected in the codebase! Failing the pipeline."
            exit 1
          fi
      - name: Check SAST Report
        run: |
          if grep -q "HIGH" bandit-report.html; then
            echo "Critical vulnerabilities found in code! Failing the pipeline."
            exit 1
          fi
      - name: Check DAST Report
        run: |
          if grep -q "WARN" owasp-zap-report.html; then
            echo "DAST found warnings! Consider fixing."
            exit 1
          fi
  sca:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install --upgrade pip && pip install -r requirements.txt
      - name: Run Dependency Check (SCA)
        run: |
          pip install safety
          safety check --full-report > dependency-check-report.txt || true
      - name: Upload Dependency Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: dependency-check-report.txt

  iac:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install Terraform
        run: |
          sudo apt-get update && sudo apt-get install -y unzip
          curl -sSL -o terraform.zip https://releases.hashicorp.com/terraform/1.3.5/terraform_1.3.5_linux_amd64.zip
          unzip terraform.zip
          sudo mv terraform /usr/local/bin/
          terraform --version
      - name: Install Checkov
        run: |
          pip install checkov
      - name: Terraform Init
        run: |
          cd terraform
          terraform init
      - name: Terraform Validate
        run: |
          cd terraform
          terraform validate
      - name: Run IaC Security Scan
        run: |
          checkov -d terraform --output cli --output-file-path iac-security-report.txt || true
      - name: Upload IaC Security Report
        uses: actions/upload-artifact@v4
        with:
          name: iac-security-report
          path: iac-security-report.txt
  secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Run Secrets Detection (GitLeaks)
        run: |
          curl -sSL -o gitleaks https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-amd64 && chmod +x gitleaks && mv gitleaks /usr/local/bin/
          gitleaks detect --source . --report-path=gitleaks-report.json || true
        
      - name: Upload GitLeaks Report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json

  sast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install --upgrade pip && pip install -r requirements.txt
      - name: Run Bandit Security Scan
        run: |
          bandit -r . -f html -o bandit-report.html || true
      - name: Upload Bandit Report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.html

  dast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install --upgrade pip && pip install -r requirements.txt
      - name: Start Flask App
        run: |
          nohup python app.py > app.log 2>&1 &
          sleep 10
          curl --retry 5 --retry-connrefused --silent --fail http://localhost:8000 || (echo "Flask app failed to start" && exit 1)
      - name: Pull ZAP Docker Image (Fixes Permission Issues)
        run: |
          docker pull ghcr.io/zaproxy/zaproxy:stable
      - name: OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: 'http://localhost:8000'
          cmd_options: '-J report_json.json -w report_md.md -r report_html.html'
          allow_issue_writing: false
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: owasp-zap-report
          path: owasp-zap-report.html
